<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="camera_mount">

  <!-- Camera mount properties -->
  <xacro:property name="pole_radius" value="0.02"/>      <!-- 20mm pole radius -->
  <xacro:property name="pole_height" value="1.0"/>       <!-- 1m height -->
  <xacro:property name="base_radius" value="0.1"/>       <!-- 100mm base radius -->
  <xacro:property name="base_height" value="0.05"/>      <!-- 50mm base height -->
  <xacro:property name="camera_box_size" value="0.08"/>  <!-- 80mm camera housing -->

  <!-- Materials -->
  <material name="mount_metal">
    <color rgba="0.5 0.5 0.5 1.0"/>  <!-- Gray metal -->
  </material>

  <material name="camera_housing">
    <color rgba="0.2 0.2 0.2 1.0"/>  <!-- Dark gray -->
  </material>

  <!-- Base plate -->
  <link name="camera_mount_base">
    <inertial>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <mass value="5.0"/>
      <inertia ixx="0.02" ixy="0" ixz="0" iyy="0.02" iyz="0" izz="0.04"/>
    </inertial>
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <cylinder radius="${base_radius}" length="${base_height}"/>
      </geometry>
      <material name="mount_metal"/>
    </visual>
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <cylinder radius="${base_radius}" length="${base_height}"/>
      </geometry>
    </collision>
  </link>

  <!-- Vertical pole -->
  <link name="camera_pole">
    <inertial>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <mass value="3.0"/>
      <inertia ixx="0.25" ixy="0" ixz="0" iyy="0.25" iyz="0" izz="0.001"/>
    </inertial>
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <cylinder radius="${pole_radius}" length="${pole_height}"/>
      </geometry>
      <material name="mount_metal"/>
    </visual>
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <cylinder radius="${pole_radius}" length="${pole_height}"/>
      </geometry>
    </collision>
  </link>

  <joint name="base_to_pole" type="fixed">
    <parent link="camera_mount_base"/>
    <child link="camera_pole"/>
    <origin xyz="0 0 ${base_height/2 + pole_height/2}" rpy="0 0 0"/>
  </joint>

  <!-- Camera housing -->
  <link name="camera_housing">
    <inertial>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <mass value="0.5"/>
      <inertia ixx="0.001" ixy="0" ixz="0" iyy="0.001" iyz="0" izz="0.001"/>
    </inertial>
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="${camera_box_size} ${camera_box_size} ${camera_box_size/2}"/>
      </geometry>
      <material name="camera_housing"/>
    </visual>
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="${camera_box_size} ${camera_box_size} ${camera_box_size/2}"/>
      </geometry>
    </collision>
  </link>

  <joint name="pole_to_housing" type="fixed">
    <parent link="camera_pole"/>
    <child link="camera_housing"/>
    <origin xyz="0 0 ${pole_height/2 + camera_box_size/4}" rpy="0 0 0"/>
  </joint>

  <!-- Camera link (actual camera sensor) -->
  <link name="camera_link">
    <inertial>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <mass value="0.1"/>
      <inertia ixx="0.0001" ixy="0" ixz="0" iyy="0.0001" iyz="0" izz="0.0001"/>
    </inertial>
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <cylinder radius="0.01" length="0.02"/>  <!-- Small lens -->
      </geometry>
      <material name="camera_housing"/>
    </visual>
  </link>

  <joint name="housing_to_camera" type="fixed">
    <parent link="camera_housing"/>
    <child link="camera_link"/>
    <origin xyz="0 0 ${-camera_box_size/4 - 0.01}" rpy="0 0 0"/>
  </joint>

  <!-- Camera optical frame (for computer vision) -->
  <link name="camera_optical_frame"/>

  <joint name="camera_to_optical" type="fixed">
    <parent link="camera_link"/>
    <child link="camera_optical_frame"/>
    <!-- Rotate to standard optical frame (Z forward, Y down, X right) -->
    <origin xyz="0 0 0" rpy="${-pi/2} 0 ${-pi/2}"/>
  </joint>

  <!-- Gazebo camera plugin -->
  <gazebo reference="camera_link">
    <sensor type="camera" name="chess_camera">
      <update_rate>30.0</update_rate>
      <camera name="head">
        <horizontal_fov>1.3962634</horizontal_fov>  <!-- 80 degrees -->
        <image>
          <width>1920</width>
          <height>1080</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>10.0</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>chess_camera</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>camera_optical_frame</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>

  <!-- Gazebo properties -->
  <gazebo reference="camera_mount_base">
    <material>Gazebo/Grey</material>
    <mu1>0.8</mu1>
    <mu2>0.8</mu2>
    <kp>1000000.0</kp>
    <kd>100.0</kd>
  </gazebo>

  <gazebo reference="camera_pole">
    <material>Gazebo/Grey</material>
  </gazebo>

  <gazebo reference="camera_housing">
    <material>Gazebo/Black</material>
  </gazebo>

</robot>
